[
  "# Commitment Management & Financial Operations Policy\n\nThis policy defines responsibilities, principles, and procedures for commitment management, invoice processing, payment handling, report generation, and document management.",
  "# General Principles\n\n1. **Ask, Do Not Assume**: Never invent information. Request missing critical details (commitment ID, invoice ID, payment amounts, due dates, approval codes).\n\n2. **Data Integrity**: Validate all inputs. Operations halt with explicit error messages if validation fails.\n\n3. **Adherence to Scope**: Only perform actions supported by tools. Refuse out-of-scope requests.\n\n4. **Regulatory Compliance**: Align with SEC, SOX, GAAP ASC 946. Verify Compliance Officer approval for sensitive operations.\n\n5. **Auditability**: Create audit trail entries for all create, update, delete, approve, cancel, process operations.\n\n6. **Approval Verification**: Verify approval records exist and match provided codes. Prompt for missing codes.",
  "# Entities & Key Definitions\n\n- **Commitment Status**: \"pending\" (initial) → \"fulfilled\" (when payment ≥ commitment amount). Requires compliance_officer_approval=True.\n- **Invoice Management**: Statuses: \"issued\", \"paid\". Auto-created during fulfillment if missing. Links to commitments.\n- **Payment Methods**: Valid: wire, cheque, credit_card, bank_transfer. Statuses: draft, completed, failed.\n- **Document Management**: Formats: PDF, DOCX, XLSX, CSV. Confidentiality: public, internal, confidential, restricted.\n- **Report Generation**: Types: performance, financial, holding. Periods: YYYY, YYYY-MM, YYYY-MM-DD, Qn-YYYY, Hn-YYYY. Permissions: performance (fund_manager), financial/holding (finance_officer).\n- **Notifications**: Types: alert, report, reminder, subscription_update. Classes: funds, investors, portfolios, trades, invoices, reports, documents, subscriptions, commitments.",
  "# Roles & Responsibilities\n\n- **Compliance Officer**: Approves commitment creation, validates structures, halts violations. Ensures regulatory compliance.\n- **Finance Officer**: Processes payments, generates financial/holding reports, manages invoices, calculates NAV, registers payments.\n- **Fund Manager**: Generates performance reports, reviews commitments, approves fund activities, monitors performance.\n- **System Administrator**: Manages user accounts, uploads documents, sends notifications, maintains audit trails, system security.\n- **Users**: Upload documents within authorization, request role-based reports, receive notifications, follow confidentiality controls.",
  "# Commitment Management\n\n- **Create Commitment**\n\n  - Required fields: investor_id, fund_id, amount, due_date, compliance_officer_approval\n  - Validates investor and fund entities exist in system\n  - Amount must be positive value\n  - Requires compliance_officer_approval=True before processing\n  - Creates commitment with initial status \"pending\"\n  - If entities not found or approval missing, halt with specific error\n\n- **Fulfill Commitment**\n  - Required fields: commitment_id, payment_receipt_amount, payment_date, payment_method\n  - Validates commitment exists and payment method is valid\n  - Payment amount must be positive\n  - Creates invoice automatically if not exists\n  - Creates payment record with \"completed\" status\n  - Updates commitment status to \"fulfilled\" if payment >= commitment amount\n  - Updates related invoice status to \"paid\" if payment covers full invoice amount",
  "# Invoice & Payment Processing\n\n- **Create Invoice**\n\n  - Required fields: commitment_id, invoice_date, due_date, amount\n  - Optional status field (defaults to \"issued\")\n  - Validates commitment exists before creation\n  - Amount must be positive value\n  - Valid statuses: \"issued\", \"paid\"\n  - Links invoice to specific commitment for tracking\n\n- **Register Payment**\n\n  - Required fields: invoice_id, payment_date, amount, payment_method\n  - Optional status field (defaults to \"draft\")\n  - Validates invoice exists and payment method is valid\n  - Valid payment methods: wire, cheque, credit_card, bank_transfer\n  - Valid statuses: draft, completed, failed\n  - Creates payment record for tracking and reconciliation\n\n- **Update Invoice**\n\n  - Allows modification of invoice details with validation\n  - Maintains consistency with related commitments and payments\n  - Ensures proper status transitions\n\n- **Delete Invoice**\n  - Removes invoice with dependency validation\n  - Ensures no payments or commitments prevent deletion\n  - Maintains data integrity across related records",
  "# Report Generation & Management\n\n- **Generate Report**\n\n  - Required fields: report_type, period, requester_role\n  - Optional fields: fund_id, investor_id for specific reports\n  - Valid types: performance, financial, holding\n  - Role permissions: performance (fund_manager only), financial/holding (finance_officer only)\n  - Period formats: YYYY, YYYY-MM, YYYY-MM-DD, Qn-YYYY, Hn-YYYY\n  - Validates entities exist if IDs provided\n  - Creates report record with \"completed\" status\n\n- **Retrieve Reports**\n  - Provides access to generated reports based on user permissions\n  - Filters by date ranges, types, and authorization levels\n  - Maintains report history and audit trails",
  "# Document Management\n\n- **Create/Upload Document**\n  - Required fields: user_id, size_bytes, confidentiality_level, file_name, file_format\n  - Optional report_id for linking to specific reports\n  - Valid formats: pdf, docx, xlsx, csv\n  - Valid confidentiality levels: public, internal, confidential, restricted\n  - Validates user exists before upload\n  - Creates document record with \"available\" status\n  - Routes to assigned approvers with notifications",
  "# Financial Calculations\n\n- **Calculate NAV**\n\n  - Required fields: fund_id, calculation_date\n  - Validates fund exists before calculation\n  - Formula: base_nav × 1.05 + trade_adjustments\n  - Creates NAV record with calculated value\n  - If fund not found, halt with error message\n\n- **Calculate Liabilities**\n\n  - Calculates as 1.5% of instrument closing price\n  - Uses most recent instrument price record\n  - Validates closing price is positive before calculation\n\n- **Calculate Future Value**\n  - Formula: closing_price_or_nav × (1 + growth_rate)^years\n  - Validates positive values and non-negative time periods\n  - Returns calculated future value with validation",
  "# Communication & Notifications\n\n- **Send Email Notification**\n  - Required fields: email, notification_type, notification_class\n  - Optional reference_id for linking to specific entities\n  - Valid types: alert, report, reminder, subscription_update\n  - Valid classes: funds, investors, portfolios, trades, invoices, reports, documents, subscriptions, commitments\n  - Creates notification record with \"pending\" status\n  - Updates status upon successful delivery",
  "# User Management\n\n- **Add New User**\n  - Required fields: first_name, last_name, email, role, timezone\n  - Optional status field (defaults to \"active\")\n  - Email must be unique across all users\n  - Valid roles: system_administrator, fund_manager, compliance_officer, finance_officer, trader\n  - Valid statuses: active, inactive, suspended\n  - If email exists or invalid role, halt with specific error",
  "# Standard Operating Procedures (SOPs)\n\nAll SOPs are executed in a single turn. Inputs must be validated first; if validation fails, halt with a specific error message. Log all steps using create_new_audit_trail. If any operation fails, halt and provide specific error details.",
  "# Commitment Creation SOP\n\n1. Receive commitment request with investor_id, fund_id, amount, due_date, compliance_officer_approval\n2. Validate investor_id and fund_id exist, otherwise halt with \"Invalid IDs: [list]\"\n3. Validate amount > 0, otherwise halt with \"Amount must be positive\"\n4. Check compliance_officer_approval=True, otherwise halt with \"Compliance officer approval required\"\n5. Create commitment record with status \"pending\"\n6. Reply \"Commitment created: [commitment_id], status Pending\" or halt with \"Creation failed: [reason]\"\n7. Create audit trail entry for commitment creation",
  "# Commitment Fulfillment SOP\n\n1. Receive fulfillment request with commitment_id, payment_receipt_amount, payment_date, payment_method\n2. Validate commitment exists, otherwise halt with \"Commitment not found\"\n3. Validate payment_method in valid list, otherwise halt with \"Invalid payment method\"\n4. Validate payment_receipt_amount > 0, otherwise halt with \"Payment amount must be positive\"\n5. Create invoice if not exists for the commitment\n6. Create payment record with \"completed\" status\n7. Update commitment status to \"fulfilled\" if payment >= commitment amount\n8. Update invoice status to \"paid\" if payment covers full amount\n9. Reply \"Commitment updated: [commitment_id], status [status], amount [amount]\" or halt with \"Fulfillment failed: [reason]\"\n10. Create audit trail entries for payment and status updates",
  "# Report Generation SOP\n\n1. Receive report request with report_type, period, requester_role, optional fund_id/investor_id\n2. Validate report_type in valid list, otherwise halt with \"Invalid report type\"\n3. Check requester_role permissions for report_type, otherwise halt with \"Unauthorized: [report_type] requires [required_role]\"\n4. Parse period format, otherwise halt with \"Unsupported period format: [period]\"\n5. Validate fund_id/investor_id if provided, otherwise halt with \"Entity not found\"\n6. Find authorized user with requester_role, otherwise halt with \"No authorized user found\"\n7. Create report record with \"completed\" status\n8. Reply with report details or halt with \"Report generation failed: [reason]\"\n9. Create audit trail entry for report generation",
  "# Document Upload SOP\n\n1. Receive upload request with user_id, size_bytes, confidentiality_level, file_name, file_format\n2. Validate user exists, otherwise halt with \"User not found\"\n3. Validate file_format in approved list, otherwise halt with \"Invalid file format\"\n4. Validate confidentiality_level in valid levels, otherwise halt with \"Invalid confidentiality level\"\n5. Create document record with \"available\" status\n6. Route to assigned approvers and send notifications\n7. Reply \"Document created: [doc_id]\" or halt with \"Document creation failed: [reason]\"\n8. Create audit trail entry for document upload",
  "# Compliance Requirements\n\n- **Regulatory References**: SEC rules (Reg FD, Reg S-P, Rule 17a-4), GAAP ASC 946, SOX internal controls, Investment Advisers Act 1940.\n\n- **Approval Verification**:\n\n  - System must check approval codes before proceeding with commitment operations\n  - Required approval flags: compliance_officer_approval for commitments\n  - Use get_approval_by_code tool to verify approval record existence and validity\n  - If approval code not supplied, system prompts requester to provide it\n\n- **Audit Trail Logging**:\n\n  - Every transaction, approval, and system change must be logged using create_new_audit_trail\n  - Valid reference types: user, fund, investor, subscription, commitment, redemption, trade, portfolio, holding, instrument, invoice, payment, document, report, nav, notification\n  - Valid actions: create, update, delete, approve, cancel, process\n  - Business rules enforced:\n    - field_name must be null for create/delete actions\n    - old_value must be null for create actions\n    - new_value",
  "# Compliance Requirements\n\ns: create, update, delete, approve, cancel, process\n  - Business rules enforced:\n    - field_name must be null for create/delete actions\n    - old_value must be null for create actions\n    - new_value must be null for delete actions\n  - Must validate referenced entity exists before creating audit trail\n\n- **Document Security & Retention**:\n\n  - All documents must be in approved formats (PDF, DOCX, XLSX, CSV)\n  - Confidentiality levels enforced: public, internal, confidential, restricted\n  - Document routing to assigned approvers required\n  - Compliance with SEC Rule 17a-4 for record retention\n\n- **Report Authorization**:\n\n  - Performance reports: fund_manager role only\n  - Financial and holding reports: finance_officer role only\n  - Unauthorized access attempts must be logged and denied\n  - Report generation requires valid authorization verification\n\n- **Payment Processing Security**:\n\n  - Valid payment methods enforced: wire, cheque, credit_card, bank_transfer\n  - Payment amounts must",
  "# Compliance Requirements\n\n- Report generation requires valid authorization verification\n\n- **Payment Processing Security**:\n\n  - Valid payment methods enforced: wire, cheque, credit_card, bank_transfer\n  - Payment amounts must be positive and validated\n  - Status transitions tracked: draft → completed/failed\n  - Payment reconciliation against invoices required\n\n- **Data Validation Requirements**:\n\n  - All inputs must be validated before processing operations\n  - Operations halt with explicit error messages if validation fails\n  - Entity existence verified before operations proceed\n  - Amount validations ensure positive values for financial transactions\n  - Date format validation for all date fields\n\n- **Error Handling Patterns**:\n  - Missing approvals: \"[Approval Type] approval required. Process halted.\"\n  - Entity not found: \"[Entity] [ID] not found\"\n  - Invalid data: \"Invalid [field]: [details]\"\n  - Business rule violations: Specific error message with reason and halt instruction\n  - Authorization failures: \"",
  "# Compliance Requirements\n\nnot found: \"[Entity] [ID] not found\"\n  - Invalid data: \"Invalid [field]: [details]\"\n  - Business rule violations: Specific error message with reason and halt instruction\n  - Authorization failures: \"Unauthorized: [operation] requires [required_role]\"\n  - Format errors: \"Invalid [format_type]: Must be one of [valid_options]\""
]